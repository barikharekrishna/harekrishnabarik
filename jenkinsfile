pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1 
kind: Pod
spec:
  nodeSelector:
    test: windows1
  tolerations:
  - key: "node.kubernetes.io/os"
    operator: "Equal"
    value: "windows"
    effect: "NoSchedule"
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:windowsservercore-ltsc2019
    command:
    - cat
    tty: true
  - name: docker
    image: mcr.microsoft.com/dotnet/framework/aspnet:4.8-windowsservercore-ltsc2019
    securityContext:
      runAsUser: 0
    volumeMounts:
    - name: dockersock
      mountPath: /var/run/docker.sock    
  volumes:
  - name: dockersock
    hostPath:
      path: /var/run/docker.sock
'''
        }
    }
    stages {
    stage('build') {
      steps {
        container('docker') {
          sh 'docker --version'
          sh 'docker build -t windows .'
        }
      }
    }
  }
}
